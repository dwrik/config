" Setting some decent VIM settings for programming
" This source file comes from git-for-windows build-extra repository (git-extra/vimrc)

ru! defaults.vim                " Use Enhanced Vim defaults
set mouse=                      " Reset the mouse setting from defaults
set belloff=all                 " Turn off bell for all events
aug vimStartup | au! | aug END  " Revert last positioned jump, as it is defined below
let g:skip_defaults_vim = 1     " Do not source defaults.vim again (after loading this system vimrc)

set ai                          " set auto-indenting on for programming
set si                          " set smart-indenting on for programming
set linebreak                   " doesn't wrap mid word
set hlsearch                    " highlights search match
set incsearch                   " search as characters are typed
set ignorecase                  " ignore case while searching
set number relativenumber       " line number & relative number
set showmatch                   " automatically show matching brackets
set showmode                    " show the current mode
set clipboard=unnamed           " set clipboard to unnamed to access the system clipboard under windows
set wildmenu                    " command line completion
set foldmethod=indent           " method by which to fold
set foldlevel=99                " level of folding

" enable folding with space
nnoremap <space> za

" deleting buffers with ctrl+w ctrl+q
nnoremap <C-W><C-Q> :bdelete %<return>

" clear highlights
nnoremap // :noh<return>

" automatically delete trailing whitespaces and newlines at save.
autocmd BufWritePre * %s/\s\+$//e
autocmd BufWritepre * %s/\n\+\%$//e

" indentation and spacing for different file types
autocmd BufNewFile,BufRead,filetype *.java,*.py,*.js,*.css,*.html,*.cpp,*c,*h,*php
    \ set tabstop=2 |
    \ set softtabstop=2 |
    \ set shiftwidth=2 |
    \ set textwidth=80 |
    \ set expandtab |
    \ set autoindent |
    \ set fileformat=unix

" compile and run code
autocmd filetype python nnoremap <f9> :w <bar> :!python % <return>
autocmd filetype java nnoremap <f9> :w <bar> :!javac % && java -classpath %:h %:t:r <return>

" enbale colors
if &term =~ 'xterm-256color'    " mintty identifies itself as xterm-compatible
  if &t_Co == 8
    set t_Co = 256              " Use at least 256 colors
  endif
  set termguicolors             " Uncomment to allow truecolors on mintty
endif

"------------------------------------------------------------------------------
" Only do this part when compiled with support for autocommands.
"------------------------------------------------------------------------------
"
if has("autocmd")

    " Set UTF-8 as the default encoding for commit messages
    autocmd BufReadPre COMMIT_EDITMSG,MERGE_MSG,git-rebase-todo setlocal fileencodings=utf-8

    " Remember the positions in files with some git-specific exceptions"
    autocmd BufReadPost *
      \ if line("'\"") > 0 && line("'\"") <= line("$")
      \           && &filetype !~# 'commit\|gitrebase'
      \           && expand("%") !~ "ADD_EDIT.patch"
      \           && expand("%") !~ "addp-hunk-edit.diff" |
      \   exe "normal g`\"" |
      \ endif

      autocmd BufNewFile,BufRead *.patch set filetype=diff

      autocmd Filetype diff
      \ highlight WhiteSpaceEOL ctermbg=red |
      \ match WhiteSpaceEOL /\(^+.*\)\@<=\s\+$/

endif " has("autocmd")
